// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pitaya.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NPitaya.Protos {
  public static partial class Pitaya
  {
    static readonly string __ServiceName = "protos.Pitaya";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::NPitaya.Protos.Request> __Marshaller_protos_Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.Request.Parser));
    static readonly grpc::Marshaller<global::NPitaya.Protos.Response> __Marshaller_protos_Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.Response.Parser));
    static readonly grpc::Marshaller<global::NPitaya.Protos.Push> __Marshaller_protos_Push = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.Push.Parser));
    static readonly grpc::Marshaller<global::NPitaya.Protos.BindMsg> __Marshaller_protos_BindMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.BindMsg.Parser));
    static readonly grpc::Marshaller<global::NPitaya.Protos.KickMsg> __Marshaller_protos_KickMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.KickMsg.Parser));
    static readonly grpc::Marshaller<global::NPitaya.Protos.KickAnswer> __Marshaller_protos_KickAnswer = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NPitaya.Protos.KickAnswer.Parser));

    static readonly grpc::Method<global::NPitaya.Protos.Request, global::NPitaya.Protos.Response> __Method_Call = new grpc::Method<global::NPitaya.Protos.Request, global::NPitaya.Protos.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Call",
        __Marshaller_protos_Request,
        __Marshaller_protos_Response);

    static readonly grpc::Method<global::NPitaya.Protos.Push, global::NPitaya.Protos.Response> __Method_PushToUser = new grpc::Method<global::NPitaya.Protos.Push, global::NPitaya.Protos.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PushToUser",
        __Marshaller_protos_Push,
        __Marshaller_protos_Response);

    static readonly grpc::Method<global::NPitaya.Protos.BindMsg, global::NPitaya.Protos.Response> __Method_SessionBindRemote = new grpc::Method<global::NPitaya.Protos.BindMsg, global::NPitaya.Protos.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SessionBindRemote",
        __Marshaller_protos_BindMsg,
        __Marshaller_protos_Response);

    static readonly grpc::Method<global::NPitaya.Protos.KickMsg, global::NPitaya.Protos.KickAnswer> __Method_KickUser = new grpc::Method<global::NPitaya.Protos.KickMsg, global::NPitaya.Protos.KickAnswer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KickUser",
        __Marshaller_protos_KickMsg,
        __Marshaller_protos_KickAnswer);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NPitaya.Protos.PitayaReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Pitaya</summary>
    [grpc::BindServiceMethod(typeof(Pitaya), "BindService")]
    public abstract partial class PitayaBase
    {
      public virtual global::System.Threading.Tasks.Task<global::NPitaya.Protos.Response> Call(global::NPitaya.Protos.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::NPitaya.Protos.Response> PushToUser(global::NPitaya.Protos.Push request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::NPitaya.Protos.Response> SessionBindRemote(global::NPitaya.Protos.BindMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::NPitaya.Protos.KickAnswer> KickUser(global::NPitaya.Protos.KickMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Pitaya</summary>
    public partial class PitayaClient : grpc::ClientBase<PitayaClient>
    {
      /// <summary>Creates a new client for Pitaya</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PitayaClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Pitaya that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PitayaClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PitayaClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PitayaClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::NPitaya.Protos.Response Call(global::NPitaya.Protos.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Call(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NPitaya.Protos.Response Call(global::NPitaya.Protos.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Call, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> CallAsync(global::NPitaya.Protos.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> CallAsync(global::NPitaya.Protos.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Call, null, options, request);
      }
      public virtual global::NPitaya.Protos.Response PushToUser(global::NPitaya.Protos.Push request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PushToUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NPitaya.Protos.Response PushToUser(global::NPitaya.Protos.Push request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PushToUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> PushToUserAsync(global::NPitaya.Protos.Push request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PushToUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> PushToUserAsync(global::NPitaya.Protos.Push request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PushToUser, null, options, request);
      }
      public virtual global::NPitaya.Protos.Response SessionBindRemote(global::NPitaya.Protos.BindMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SessionBindRemote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NPitaya.Protos.Response SessionBindRemote(global::NPitaya.Protos.BindMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SessionBindRemote, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> SessionBindRemoteAsync(global::NPitaya.Protos.BindMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SessionBindRemoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.Response> SessionBindRemoteAsync(global::NPitaya.Protos.BindMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SessionBindRemote, null, options, request);
      }
      public virtual global::NPitaya.Protos.KickAnswer KickUser(global::NPitaya.Protos.KickMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KickUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NPitaya.Protos.KickAnswer KickUser(global::NPitaya.Protos.KickMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KickUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.KickAnswer> KickUserAsync(global::NPitaya.Protos.KickMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KickUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NPitaya.Protos.KickAnswer> KickUserAsync(global::NPitaya.Protos.KickMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KickUser, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PitayaClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PitayaClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PitayaBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Call, serviceImpl.Call)
          .AddMethod(__Method_PushToUser, serviceImpl.PushToUser)
          .AddMethod(__Method_SessionBindRemote, serviceImpl.SessionBindRemote)
          .AddMethod(__Method_KickUser, serviceImpl.KickUser).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PitayaBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Call, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NPitaya.Protos.Request, global::NPitaya.Protos.Response>(serviceImpl.Call));
      serviceBinder.AddMethod(__Method_PushToUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NPitaya.Protos.Push, global::NPitaya.Protos.Response>(serviceImpl.PushToUser));
      serviceBinder.AddMethod(__Method_SessionBindRemote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NPitaya.Protos.BindMsg, global::NPitaya.Protos.Response>(serviceImpl.SessionBindRemote));
      serviceBinder.AddMethod(__Method_KickUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NPitaya.Protos.KickMsg, global::NPitaya.Protos.KickAnswer>(serviceImpl.KickUser));
    }

  }
}
#endregion
